[
  {
    "objectID": "expectations.html",
    "href": "expectations.html",
    "title": "Project Expectations",
    "section": "",
    "text": "This may be your first time working on a scientific project, and maybe even your first time producing a scientific document (your project dissertation). The guide below is intended to help you understand what to expect, and should be read in conjunction with the project student learning agreement (MyPlace )."
  },
  {
    "objectID": "expectations.html#conducting-your-project",
    "href": "expectations.html#conducting-your-project",
    "title": "Project Expectations",
    "section": "1 Conducting Your Project",
    "text": "1 Conducting Your Project\n\nSome general advice about the group \nHow to avoid cognitive overload \n\n\n1.1 Science\n\nMaintain a detailed record of your work (i.e. a lab notebook), either on paper or electronically.\n\nAll the projects run by our group are computational. You will probably find it easiest to maintain an electronic record.\nKeeping a lab notebook to document your project \n\n\n\n\n\n\n\n\nImportant\n\n\n\n\nBack up your work frequently and in more than one place - you do not want to lose all of your data!\n\nIt’s a common view in computation biology that, if there are not three copies of your data/work (ideally in two physical locations), it might as well not exist.\n\n\n\n\n\nAt the end of the project, I expect you to provide me with the raw data files from your work. For example:\n\nFor a phylogenetic tree, I expect: the .fasta file containing the unaligned sequences; the multiple sequence alignment used to construct the tree (.fasta, .msa, etc.); and the .newick (or .nex) file for the tree. This is required so that projects can be continued and built upon in future years.\nYou may find it most convenient to manage your project using standard computational biology tools, such as version control (e.g. git and GitHub). I would also find that convenient and strongly recommend it.\n\n\n\n\n1.2 Teamwork and collegiality\n\nGroup Code of Conduct \nI expect you to help each other. In particular, some of you will have more experience than others in the group, when using computational and bioinformatics tools. You are all doing different projects, but you are using similar tools and techniques. I expect you to share knowledge and understanding kindly with one another.\n\nScience is a team effort and it benefits from people working together in groups. We can accomplish more together than one person working alone can.\nListen respectfully to each other, learn from each other, and contribute as you can.\nBe respectful of others’ different life experiences. Learn from them when appropriate, and contribute when appropriate. Do not insult or put down people who share their experiences.\n\nIf you find that you have made a mistake: listen, offer a genuine apology, and commit to learning and doing better.\n\n\n\n1.3 Kindness\n\nBe kind to yourself. Be mindful of your limits, and aware of the fact that this is a world in crisis, with a myriad challenges.\n\nGive yourself credit for the hard work that you’re doing every day.\n\nBe kind to others. Give them the benefit of the doubt when needed; remember that online communication often misses nuance or meaning.\n\nRemember that everyone is struggling right now and may not be able to be their best selves.\n\nBe patient. Science can be hard work. Things take longer to accomplish when you are first learning a technique. You may need to repeat experiments or start over with a new dataset. This is all part of the process, and to be expected.\n\nBe assured that you are making progress, even though it may not feel that way at the time.\n\n\n\n\n1.4 Good Communication\n\nHow to ask for feedback \nHow to ask good questions \nBe clear, open, and honest in your communication\n\n\n\n\n\n\n\nCaution\n\n\n\nI cannot help if you don’t let me know that there’s a problem.\n\n\n\nWe will meet at least once a week in person or via Zoom (individual and/or group meetings).\n\nZoom etiquette: turning your camera, microphone on/off is completely up to you, no pressure either way.\n\nBetween meetings, I’m available by email to answer questions or you can schedule a drop-in Zoom or 1:1 meeting (depending on our schedules).\nDon’t be afraid to ask for help. You have many resources to call on, including:\n\nMe (…this is literally my job!)\nEach other. Please do talk to and help each other! - we call this “Peer Learning” and it’s deliberately part of the project. It’s not cheating or plagiarism.\nAnyone else in the SIPBS CompBiol Group\nThe Microbiology group\nAsk questions in your lectures/open office sessions\nStack Overflow, Bioinformatics Stack Exchange and other specialist sites\nSocial Media (it can be a great place to crowdsource science questions, but it can also be a cesspool)\n\nTake ownership of your project. I am here to help and to guide you, but this is not my thesis (I have already done one!)\n\nCome to meetings prepared.\nThink independently and critically\nRead broadly\n\n\n\n\n\n\n\n\nCaution\n\n\n\nSites like Stack Overflow and Stack Exchange, while extremely useful and valuable for the community, can sometimes contain some robust communication and opinion from strong-minded people.\n\n\n\n\n\n\n\n\nNote\n\n\n\nAll of the above contributes to your project performance mark\n\n\n\nDon’t be afraid to tell me that you think I’m wrong. I’m a scientist. I’m probably wrong at least half the time - that’s how things are.\n\nYour data may contradict my hypotheses or ideas. That’s how science works.\nYou will probably find something in the literature that I wasn’t aware of. I’ll be interested to hear about it.\nYou may well have insights and clever thoughts that I won’t have. You are closer to your project than I am, and that will generate insight for you which is inaccessible to me.\nDoing science can involve challenges to accepted dogma, and the Scientific Method requires us to prove ideas (usually our own ideas!) wrong. Be bold."
  },
  {
    "objectID": "expectations.html#what-you-should-expect-from-me",
    "href": "expectations.html#what-you-should-expect-from-me",
    "title": "Project Expectations",
    "section": "2 What you should expect from me",
    "text": "2 What you should expect from me\n\nKindness, team-work, and collegiality\nAdvice and guidance on planning and carrying out your experiments\nGuidance on how to write a scientific document\nFeedback on drafts and practice presentation\nGood communication\nEmail responses within a working day (I will do my absolute best)\nFeedback on project performance\nReferences\n\n\n\n\n\n\n\nNote\n\n\n\nIf you want to name me as a reference there’s no need to ask for permission, but I do appreciate as much notice as possible. I want to encourage an employer to hire you/a course to take you on so, if you can send me your CV and a couple of points you’d like me to highlight, so much the better!\n\n\n\n\n\n\n\n\nA few tips and suggestions for success\n\n\n\n\nTake care of yourself (a healthy mind requires a healthy body)\nStay organized: set yourself deadlines (but be flexible when you need to be)\nDon’t feel the need to write your draft in one go – it’s much better to work on it a little bit every day (it’s a marathon, not a sprint)\n\nBreak it down into small tasks\nGet into the habit of writing at least a few sentences daily\n\nTake breaks and let your mind rest/process ideas (take a walk, wash the dishes, drink some tea).\nTake breaks from the screen.\nWhen you read papers, and go to seminars/journal clubs: pay attention to the way that other people explain their science (what works? what doesn’t?)"
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Presentations",
    "section": "",
    "text": "Think about exactly what you want to convey\n\n\ntell a story\nkeep it simple\nkeep the number of results you show small (≈3-4) and the message from each clear\n\n\nPrepare figures for your slides (the “backbone” of your talk)\n\n\n\n\n\n\n\nTip\n\n\n\nThe figures for your slides will rarely, if ever, be exactly the same figures you present in your thesis. You cannot convey as much information in a slide, so you should simplify figures for your talk such that they can be easily understood by your audience.\nPresenting too much data on a single slide can be overwhelming and your audience may disengage or read the slide instead of listening to you.\n\n\n\nIntroduction: think about what your audience needs to know (context) to understand your work\n\n\nwhat didn’t you know, at the beginning of your project?\nkeep it simple: the minimum to contextualise your story\n\n\nFor each experiment, explain (in this order):\n\n\n\nwhat you were trying to do (aim)\n\n\nhow you did it (method)\n\n\nwhat you found (results)\n\n\nwhat your results mean (significance)\n\n\n\nFinish with your conclusions/significance of your work\n\n\nwhat have you learned?\nhow have you contributed to the field?\nwhat would you do as the next step?\n\n\nGo back through your talk and make sure it “flows” in a logical order\nEdit, proofread, improve your slides.\n\n\nask other students in the group for feedback and incorporate it.\n\n\nPractice, practice, practice!\n\n\nget your timing right (it always takes longer than you think)\n\n\nRepeat steps 7 and 8 iteratively until you are happy with your presentation and feel confident in your delivery."
  },
  {
    "objectID": "presentation.html#preparing-for-your-talk-checklist",
    "href": "presentation.html#preparing-for-your-talk-checklist",
    "title": "Presentations",
    "section": "",
    "text": "Think about exactly what you want to convey\n\n\ntell a story\nkeep it simple\nkeep the number of results you show small (≈3-4) and the message from each clear\n\n\nPrepare figures for your slides (the “backbone” of your talk)\n\n\n\n\n\n\n\nTip\n\n\n\nThe figures for your slides will rarely, if ever, be exactly the same figures you present in your thesis. You cannot convey as much information in a slide, so you should simplify figures for your talk such that they can be easily understood by your audience.\nPresenting too much data on a single slide can be overwhelming and your audience may disengage or read the slide instead of listening to you.\n\n\n\nIntroduction: think about what your audience needs to know (context) to understand your work\n\n\nwhat didn’t you know, at the beginning of your project?\nkeep it simple: the minimum to contextualise your story\n\n\nFor each experiment, explain (in this order):\n\n\n\nwhat you were trying to do (aim)\n\n\nhow you did it (method)\n\n\nwhat you found (results)\n\n\nwhat your results mean (significance)\n\n\n\nFinish with your conclusions/significance of your work\n\n\nwhat have you learned?\nhow have you contributed to the field?\nwhat would you do as the next step?\n\n\nGo back through your talk and make sure it “flows” in a logical order\nEdit, proofread, improve your slides.\n\n\nask other students in the group for feedback and incorporate it.\n\n\nPractice, practice, practice!\n\n\nget your timing right (it always takes longer than you think)\n\n\nRepeat steps 7 and 8 iteratively until you are happy with your presentation and feel confident in your delivery."
  },
  {
    "objectID": "presentation.html#some-presentation-guidesresources",
    "href": "presentation.html#some-presentation-guidesresources",
    "title": "Presentations",
    "section": "2 Some presentation guides/resources",
    "text": "2 Some presentation guides/resources\n\nHow to give a better-than-average talk - A view from a psychology professor.\nGiving a Scientific Presentation - Prepared by Dr Feeney and Dr Pritchard for BM432 in 2022\n\n07-01: Presentations - Intro\n07-02: Presentations - Content\n07-03: Presentations - Figures\n07-04: Presentations - Aesthetics\n07-05: Presentations - Slide Preparation\n07-06: Presentations - Delivery\n\nScientific presentations: a cheat sheet - Good general advice for presentations, and not just scientific presentations - LP\nTen Simple Rules for Making Good Oral Presentations - More good advice from the reliable “Ten Simple Rules…” series - LP"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SIPBS CompBiol BM954 Project Pages",
    "section": "",
    "text": "Welcome to the SIPBS CompBiol Group BM954 project pages!"
  },
  {
    "objectID": "index.html#what-is-this-site-for",
    "href": "index.html#what-is-this-site-for",
    "title": "SIPBS CompBiol BM954 Project Pages",
    "section": "What is this site for?",
    "text": "What is this site for?\nThis site is designed to assist you as you complete your MSc project and dissertation in the SIPBS CompBiol group. These pages should be read in conjunction with the official SIPBS BM954 Materials available on the course MyPlace page\nWe have grouped information under three main headings:\n\nProject Guidance, which includes key dates, and tips on project and time management\nComputational Biology, providing links to online learning, databases, software, and other resources that may be helpful to you\nThesis and Presentation, with links and advice on how to structure and present your work for others"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "SIPBS CompBiol BM954 Project Pages",
    "section": "Getting Started",
    "text": "Getting Started\n\nProject Work\nPlease do read the Project Expectations page, and keep the Key Dates in mind as you carry out your project, as these outline what you should be doing and when, to keep on track with the project. Please also take time to read our advice on Project and Time Management, and how to go about writing a thesis, especially if this is your first time working on a long-form scientific project, or producing a dissertation of this length.\nWe also provide advice on giving scientific presentations - an important component of your project - and Science Communication in general. While tailored towards SIPBS projects, the advice is quite general and we hope it will be helpful for some time to come in your future career.\n\n\nComputational Biology and Bioinformatics\nIf you are new to computational biology and bioinformatics, projects in this area can be quite challenging. While we design our projects to be as accessible as possible to students with no background in the field, it is unavoidable that you will need to learn new concepts, skills, and tools in a discipline that might be unfamiliar to you. We have compiled sets of Learning Resources that can help you with the self-directed learning you may need.\nAs you may be unfamiliar with the wide scope of bioinformatics and computational biology tools and resources available, we have also compiled sets of Online Resources - databases, online services, and other important sites - that may be directly useful for your project. We have also compiled sets of Software Tools that you may be able to download and use on your own computer.\n\n\n\n\n\n\nWorking in a new discipline\n\n\n\nWe recognise that if you are new to the discipline of bioinformatics/computational biology, and more so if you are unfamiiliar with working with the standard tools of this field, that the extra learning is an additional burden that might not be faced by students who have bee assigned projects more in line with their previous experience. Overcoming this does require patience and effort, but the skills you acquire may set you apart, and maybe ahead, of other students in the long run."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "SIPBS CompBiol BM954 Project Pages",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThese pages were originally developed in 2023 by Dr Leighton Pritchard and Dr Morgan Feeney, and are currently maintained by, Dr Leighton Pritchard.\nThese materials are © University of Strathclyde, and licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Linked and embedded materials are governed by their own licenses. I assume that all external materials used or embedded here are covered under the educational fair use policy. If this is not the case and any material displayed here violates copyright, please let me know and I will remove it."
  },
  {
    "objectID": "sop.html",
    "href": "sop.html",
    "title": "BM954 SOPs",
    "section": "",
    "text": "This page outlines SOPs (Standard Operating Procedures) for the AY2024-25 BM954 BMS MSc Projects. Please use the menu in the sidebar to navigate to specific sections and activities.\nIn general, the SOPs will provide links to detailed instructions and documentation, and then provide a short walkthrough that can be used as an example from which to begin your own work. This is not a set of instructions for how to carry out your research project."
  },
  {
    "objectID": "sop.html#installing-conda-and-bioconda",
    "href": "sop.html#installing-conda-and-bioconda",
    "title": "BM954 SOPs",
    "section": "1 Installing conda and bioconda",
    "text": "1 Installing conda and bioconda\nFirst, please see the instructions at the following locations:\n\nInstalling conda on macOS\nInstalling conda on Linux\nInstalling bioconda\n\n\n1.1 Walkthrough (Linux)\n\n1.1.1 Installing conda:\n# Work in your home directory\n$ cd ~\n# Download the miniconda installer\n$ wget https://repo.anaconda.com/miniconda/Miniconda3-py312_24.4.0-0-Linux-x86_64.sh\n# Run the miniconda installer\n$ bash Miniconda3-py312_24.4.0-0-Linux-x86_64.sh\nAfter executing the last command in the example above, you will be prompted for information and responses. If you are uncertain what to respond with, use the defaults (i.e. press Return)\n\n\n\n\n\n\nTip\n\n\n\nWhen the installation is finished, conda will be installed, but not immediately available.\nTo make conda available, close your terminal window, then open a new terminal window. You should see that your command prompt changes from something like:\n$\nto something like\n(base) $\nThat is, you should see that the terminal now recognises you are working in a conda environment called base\n\n\n\n\n1.1.2 Installing bioconda\n# Add the conda channels needed for bioconda\n(base) $ conda config --add channels defaults\n(base) $ conda config --add channels bioconda\n(base) $ conda config --add channels conda-forge\n(base) $ conda config --set channel_priority strict\nYou may see messages from the software during this process. Unless there are obvious error messages, there should be nothing to be concerned about."
  },
  {
    "objectID": "sop.html#creating-and-activating-a-conda-environment-for-your-project",
    "href": "sop.html#creating-and-activating-a-conda-environment-for-your-project",
    "title": "BM954 SOPs",
    "section": "2 Creating and activating a conda environment for your project",
    "text": "2 Creating and activating a conda environment for your project\nFirst, please see the instructions at the following location\n\nhttps://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html\n\n\n2.1 Walkthrough\n# Create a new conda environment called \"MSc_Project\"\n(base) $ conda create --name MSc_Project -y\n(base) $ conda activate MSc_Project\n\n\n\n\n\n\nImportant\n\n\n\nThe name MSc_Project is chosen for the example, but you can call your project environment anything you like - but it is usually good practice to name it so that it’s obvious what you are working on.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe -y argument used in the command above answers “yes” to all the yes/no questions conda may ask during the installaion.\n\n\n\n\n\n\n\n\nTip\n\n\n\nAfter activating the MSc_Project environment, you should see that your command prompt changes from something like:\n(base) $\nto something like\n(MSc_Project) $\nThat is, you should see that the terminal now recognises you are working in a conda environment called MSc_Project\n\n\n\n\n\n\n\n\nImportant\n\n\n\nYou should carry out all the work for your project while in your project environment."
  },
  {
    "objectID": "sop.html#installing-cazy_webscraper",
    "href": "sop.html#installing-cazy_webscraper",
    "title": "BM954 SOPs",
    "section": "3 Installing cazy_webscraper",
    "text": "3 Installing cazy_webscraper\ncazy_webscraper is a software package that will help you download the complete CAZy online database to your computer, and\n\nextract data from the local database\nincorporate data from other online databases into your local database\n\n\n\n\n\n\n\nImportant\n\n\n\nYou should carry out all the work for your project while in your project environment.\n\n\n\n3.1 Walkthrough\n# cazy_webscraper is available through bioconda, so use conda to install it\n(MSc_Project) $ conda install cazy_webscraper bioservices -y\n\n\n\n\n\n\nNote\n\n\n\nThe -y argument used in the command above answers “yes” to all the yes/no questions conda may ask during the installaion."
  },
  {
    "objectID": "sop.html#downloading-a-cazy-database",
    "href": "sop.html#downloading-a-cazy-database",
    "title": "BM954 SOPs",
    "section": "4 Downloading a CAZy database",
    "text": "4 Downloading a CAZy database\nPlease read the documentation at the following links:\n\ncazy_webscraper documentation\ncazy_webscraper GitHub repository\n\n\n4.1 Walkthrough\n# Download the complete CAZy database\n(MSc_Project) $ cazy_webscraper use.your.actual@email.address.here\n# Download a CAZy database only for the genus Ochrobactrum\n(MSc_Project) $ cazy_webscraper --species Ochrobactrum use.your.actual@email.address.here\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to replace the text in the example that reads use.your.actual@email.address.here with your actual email address.\nIf you want to download CAZy data for a different genus or species, then replace Ochrobactrum with your target taxon name.\n\n\nThis will create a new SQLite3 database in your current directory with a name like cazy_webscraper_2024-06-17_08-43-52.db (but substituting the date and time with the date and time that you ran the program). That’s quite a lot to type in each time you want to use it, so you can use a symbolic link to make an alias to the database with a shorter name, as below.\n# Make a short name alias (`cazydb.db`) for the local CAZy database\n(MSc_Project) $ ln -s cazy_webscraper_2024-06-17_08-43-52.db cazydb.db\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to replace the filename in the example (cazy_webscraper_2024-06-17_08-43-52.db) with your actual database’s filename.\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can check that the alias has been created using the ls command to list the contents of the current directory:\n(MSc_Project) $ ls -l\ntotal 368\n-rw-r--r--  1 lpritc  staff   184K 17 Jun 08:45 cazy_webscraper_2024-06-17_08-43-52.db\nlrwxr-xr-x  1 lpritc  staff    38B 17 Jun 08:46 cazydb.db@ -&gt; cazy_webscraper_2024-06-17_08-43-52.db"
  },
  {
    "objectID": "sop.html#adding-genbank-sequence-data-to-the-local-cazy-database",
    "href": "sop.html#adding-genbank-sequence-data-to-the-local-cazy-database",
    "title": "BM954 SOPs",
    "section": "5 Adding GenBank sequence data to the local CAZy database",
    "text": "5 Adding GenBank sequence data to the local CAZy database\ncazy_webscraper provides commands that download sequence data from GenBank, for each sequence in the local CAZy database. Please read the documentation at:\n\ncazy_webscraper documentation\n\n\n5.1 Walkthrough\n# Download the corresponding UniProt protein sequence for each protein in the local CAZy database\n(MSc_Project) $ cw_get_genbank_seqs cazydb.db use.your.actual@email.address.here\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to replace the text in the example that reads use.your.actual@email.address.here with your actual email address.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe walkthrough is using the name of the alias to the database file, rather than the actual database filename.\nYou may see several messages relating to Batch contains an accession no longer listed in NCBI or Querying NCBI returns the error - this may affect individual records but does not otherwise indicate a problem with the download."
  },
  {
    "objectID": "sop.html#extracting-genbank-sequence-data-from-a-local-cazy-database",
    "href": "sop.html#extracting-genbank-sequence-data-from-a-local-cazy-database",
    "title": "BM954 SOPs",
    "section": "6 Extracting GenBank sequence data from a local CAZy database",
    "text": "6 Extracting GenBank sequence data from a local CAZy database\ncazy_webscraper provides commands that allow you to convert data from the database to a format useful in downstream bioinformatics programs. Please read the documentation at:\n\ncazy_webscraper documentation\n\nTo complete this part of the data extraction for multiple families in a reasonable amount of time you will need to get a list of the CAZy families present in the data you downloaded - this will need you to execute a small amount of SQL code in the databse. You will also need to use a shell script to automate extracting the sequence data for each family.\n\n\n\n\n\n\nNote\n\n\n\nThe walkthrough below will guide you through the small amount of SQL necessary to get a list of families.\nA shell script file will be provided to help you use the list to extract the sequence data, but there are no commands that you have not met already, if you worked through the Carpentries shell and SQL lessons.\n\nCarpentries Unix Shell Lessons\n\nLoops in the shell\nScripts in the shell\n\nCarpentries SQL Lessons\n\n\n\n\n\n6.1 Walkthrough\n# Extract all GenBank sequences from the local CAZy database\n(MSc_Project) $ cw_extract_db_seqs cazydb.db genbank --fasta_file seqs/all_sequences.fasta\n# Extract only GH3 sequences from the local CAZy database\n(MSc_Project) $ cw_extract_db_seqs cazydb.db genbank --fasta_file GH3/GH3_sequences.fasta --families GH3\n\n\n\n\n\n\nWarning\n\n\n\nPlease be sure to include a directory (e.g. the seqs in seqs/all_sequences.fasta) when using the cw_extract_db_seqs command, or else it may attempt to delete the contents of the current directory.\n\n\nTo obtain the list of CAZy families present in the current database, you need to open your database file, e.g.\n# Open the cazydb.db file in sqlite3\n(MSc_Project) $ sqlite3 cazydb.db\nSQLite version 3.43.2 2023-10-10 13:08:14\nEnter \".help\" for usage hints.\nsqlite&gt;\nThis will drop you into an SQL prompt for the database interpreter - that is what starts with sqlite&gt; in the example above.\nTo extract the list of families you need to do two things:\n\nTell sqlite3 the name of the file to write to\nPerform the database query (the result will be written to the file you named)\n\n# Tell sqlite what file to write output to\nsqlite&gt; .output cazy_families.txt\n# Select all families from the `CazyFamilies` table\nsqlite&gt; SELECT family FROM CazyFamilies;\n# Quite sqlite3\nsqlite&gt; .exit\nThis will write the list of CAZy family names found in the database to the file cazy_families.txt, which you can confirm by looking at the first few lines.\n# Peek at the first few lines of the cazy_families.txt file\n(MSc_Project) $ head cazy_families.txt\nGH26\nGH94\nGT1\nGT121\nGT32\nWe can use this file with a short script to extract all sequences from the database for each of the CAZy families. The content of this script file is:\nFILE=\"./cazy_families.txt\"\n\nwhile read family\ndo\n  echo \"Writing sequences for ${family}\"\n  cmd=\"cw_extract_db_seqs cazydb.db genbank --fasta_file ${family}/${family}_sequences.fasta --families ${family}\"\n  ${cmd}\ndone &lt; ${FILE}\nYou can download this script from the link below (right click on the link and choose Save Link As... or similar from the context menu)\n\nextract_families.sh\n\nOnce the script is downloaded, you can run it with the command\n# Run the downloaded Bash script to extract CAZy family sequences from the database\n(MSc_Project) $ sh extract_families.sh\nYou should see the output from multiple extraction runs on your screen, as the sequences are extracted."
  },
  {
    "objectID": "blunt_writing.html",
    "href": "blunt_writing.html",
    "title": "How to write goodly",
    "section": "",
    "text": "I see a large number of student theses, and other pieces of student writing, every year. Each document is different, but some patterns of good and bad writing are evident in every one. This page lists some of those patterns, in an attempt to help guide you towards better written communication.\nSome of this is opinionated advice. You may not agree with all of it."
  },
  {
    "objectID": "blunt_writing.html#what-this-page-is-for",
    "href": "blunt_writing.html#what-this-page-is-for",
    "title": "How to write goodly",
    "section": "",
    "text": "I see a large number of student theses, and other pieces of student writing, every year. Each document is different, but some patterns of good and bad writing are evident in every one. This page lists some of those patterns, in an attempt to help guide you towards better written communication.\nSome of this is opinionated advice. You may not agree with all of it."
  },
  {
    "objectID": "blunt_writing.html#your-thesis",
    "href": "blunt_writing.html#your-thesis",
    "title": "How to write goodly",
    "section": "2 Your thesis",
    "text": "2 Your thesis\nCommon ways student theses can be improved: a list\n\nRemember your primary goal: communicating what you did, and what it means, to your reader.\n\nYou are telling the story revealed by your research, not impressing the reader with what you know or a comprehensive account of every experiment you conducted.\n\nWrite in short, direct, clear sentences.\nUse the active voice whenever possible.\nDefine all abbreviations on first use (unless they’re trivially common, like “DNA”, but - even then - put them in a glossary).\nDon’t overstretch your conclusions. This is a 6-8 week student project, not a £2m multi-team research project.\n\nYou don’t need results to be significant, groundbreaking, or even decisive. You need to show the reader you are a scientist.\nBe cautious about implications when appropriate, e.g. “may enable,” “suggests,” “is consistent with,” etc.\n\nYou can use “I” instead of “we” in your thesis.\nA lay abstract needs to be written in everyday language, and should express similar information to the technical abstract.\nNo abstract should contain citations/references.\nThe introduction should give the reader enough information to understand the background to work you will be describing.\nEvery result in Results should have the methodology by which it was obtained clearly described in the Methods section.\nFor bioinformatics methods, every software tool should have its version number indicated, and a citation. Also state the parameters used.\n\nIt is acceptable to state “default parameters were used unless otherwise indicated,” but remember to indicate changes from the default settings.\n\nFor bioinformatics methods, state the version number of each database you used, or the date on which you accessed it.\nThe Methods section should include enough information to enable a competent scientist to reproduce the work.\nIf your study focuses on one specific result, or a small number of results, have a separate Discussion section.\nIf your study generates multiple results, and especially if the results inform each other or tell a sequential story where later results are dependent on earlier results, consider combining Results and Discussions into a single section: “Results and Discussion.”\nEvery statement of fact should be supported either by a citation, or the work that you are reporting.\nAll taxonomic names should be appropriately italicised.\n“Thus” means “as a consequence of what was just explained” - inappropriate use gives the impression of poor logic.\nFigure legends should explain the meaning and importance of the figure without the reader needing to make reference to the text.\nReferences should be cited in the text, and presented in the bibliography, in a standard manner.\n\nUse reference management software."
  },
  {
    "objectID": "blunt_writing.html#the-advice",
    "href": "blunt_writing.html#the-advice",
    "title": "How to write goodly",
    "section": "3 The advice",
    "text": "3 The advice\n\n3.1 Your job as a writer is to commmunicate\n\n\n\n\n\n\nKnow what you want to say\n\n\n\nYou are not your reader.\nYou have thoughts and ideas in your head, and the purpose of your writing is to transfer those thoughts and ideas to your reader’s head.\nIf you do not know what your thoughts and ideas are, you will not be able to communicate them to someone else. Spend time thinking about what you want to say before you write anything.\n\n\n\n\n3.2 How to improve as a writer\n\n\n\n\n\n\nYou can only improve as a writer by writing\n\n\n\nWe do not improve at things only by thinking about them. I cannot make a cup of tea by thinking about a kettle. If I want a better cup of tea I need to put the kettle on. If I want to improve my writing, I first have to write something.\nIt may not be very good, especially as a first draft. But if I do not write I cannot get better at writing.\n\n\n\n\n\n\n\n\nYou can only improve as a writer if the writing is read\n\n\n\nIt is not enough only to write. I do not know if my cup of tea is better than the last one unless it is tasted. I will not know if my writing is improving unless it is read.\nJust as I can taste my own cup of tea, I can read my own writing and form a judgement. Before sharing my writing with others, I should read it myself.\n\n\n\n\n\n\n\n\nYou can better judge your own writing if you have read other writing\n\n\n\nIf I want to know that my writing is improving, I need to know what “improvement” means. If I want to know whether my cup of tea is good or bad, I can taste it and decide whether I like it. But if I have not tasted other good and bad cups of tea, I will not know how to eliminate the bad, or exaggerate the good. I need to have read good and bad writing to have a sense of direction for my own writing.\nI can always compare my tea to other cups I have made before, but I may never find a new flavour that way. If I only compare this writing to my previous efforts, I may never find a new way to express myself. It is good to try other people’s tea, and to read other people’s writing.\n\n\n\n\n\n\n\n\nYour writing will get better if you receive constructive feedback\n\n\n\nMy perspective is limited by my experiences. My imagination of what a cup of tea could be is determined by which teas I have drunk before. If a friend who has drunk many more different teas tastes my tea and suggests a way to make it better, maybe they have a new perspective on what makes tea good that I could use. If a friend reads my writing and suggests a way to make it clearer and better, maybe they have a perspective on communication that I could benefit from.\nYou need someone who is not you to give an honest perspective on your writing through constructive feedback."
  },
  {
    "objectID": "scicomm.html",
    "href": "scicomm.html",
    "title": "Science Communication",
    "section": "",
    "text": "Science Communication Resources - Wide-ranging advice about science communication from a US non-profit - LP\nTen simple rules for scientists engaging in science communication - One of the many great “ten simple rules” articles from PLoS Comp. Biol. - LP\nTen simple rules for drawing scientific comics - Unleash your budding Gary Larson - LP\nTen Simple Rules for Effective Online Outreach - Broader in scope than just your project, but worth keeping in mind if you’re looking at a career in science - LP\nHow to Eliminate Jargon From Science Communication - I don’t believe jargon can be entirely eliminated (it’s precise language), but there’s no reason to be obscure - LP"
  },
  {
    "objectID": "scicomm.html#science-communication-resources",
    "href": "scicomm.html#science-communication-resources",
    "title": "Science Communication",
    "section": "",
    "text": "Science Communication Resources - Wide-ranging advice about science communication from a US non-profit - LP\nTen simple rules for scientists engaging in science communication - One of the many great “ten simple rules” articles from PLoS Comp. Biol. - LP\nTen simple rules for drawing scientific comics - Unleash your budding Gary Larson - LP\nTen Simple Rules for Effective Online Outreach - Broader in scope than just your project, but worth keeping in mind if you’re looking at a career in science - LP\nHow to Eliminate Jargon From Science Communication - I don’t believe jargon can be entirely eliminated (it’s precise language), but there’s no reason to be obscure - LP"
  },
  {
    "objectID": "llms.html",
    "href": "llms.html",
    "title": "LLMs, genAI, ChatGPT, and the rest",
    "section": "",
    "text": "Caution\n\n\n\nThis page, and any articles that come from external sources, are opinions. You will find a range of opinions within the group, as well as across articles like these. Discussion is encouraged!"
  },
  {
    "objectID": "llms.html#tldr-chatgpt-and-all-its-kin-are-bullshit",
    "href": "llms.html#tldr-chatgpt-and-all-its-kin-are-bullshit",
    "title": "LLMs, genAI, ChatGPT, and the rest",
    "section": "1 tl;dr: ChatGPT and all its kin are bullshit",
    "text": "1 tl;dr: ChatGPT and all its kin are bullshit\ngenAI tools such as LLMs are statistical models that produce plausible-looking output. They are, however, bullshit.\n\nHicks, M.T., Humphries, J. & Slater, J. ChatGPT is bullshit. Ethics Inf Technol 26, 38 (2024). https://doi.org/10.1007/s10676-024-09775-5\n\nI’m not just being rude. Bullshit has a technical definition:\n\n“these programs cannot themselves be concerned with truth, and because they are designed to produce text that looks truth-apt without any actual concern for truth, it seems appropriate to call their outputs bullshit”\n\nAs these tools are mathematical models designed to map a prompt onto a statistically-plausible output inferred from a corpus of training text or images, they are not concerned with truth, correctness, or accuracy for any particular question. It is this disregard for truth and accuracy, and desire only to create a plausible answer, that makes ChatGPT and any tool like it a bullshitter, and its answers bullshit.\nThe bullshit nature of genAI is exemplified by image generation using stable diffusion. This method constructs new images from noise, constrained by your text prompts and its training set.\n\n\n\n\n\n\nTip\n\n\n\nChatGPT bullshits. It is the equivalent of the guy in the pub confidently telling you that France is the capital of Italy, that the square of 11 is 1,111, and that the Pyramids were built by aliens.\n\n\n\n1.1 How image generation by stable diffusion works\nIt can seem almost like magic that we can now enter a plain text prompt and receive in seconds an illustration or graphic design representing that text. Often these images are generated by a process called “stable diffusion,” which is explained very well in the slides linked below. The mathematics can look complicated (it is in many ways a complicated process), but the general principles are understandable at a high level.\n\nStable Diffusion: a tutorial\n\n\nTake a whole bunch of images (the training corpus) with text annotations, and use an algorithm to turn these into visual “noise,” which looks like static.\nUse machine learning to learn how to go backwards from the “noisy” image (like static) to an image like the original1, guided by (conditioned on) the words in the text annotations.\n\nThe details are important, but this is essentially the high-level process. When you provide a text prompt to, say, Bing Image Generator a new “noisy” image that looks like static is generated. Constrained by the training corpus and your text prompts, the tool then constructs a new image by translating “static” into components of images."
  },
  {
    "objectID": "llms.html#how-well-does-chatgpt-do-in-exams-and-assessments",
    "href": "llms.html#how-well-does-chatgpt-do-in-exams-and-assessments",
    "title": "LLMs, genAI, ChatGPT, and the rest",
    "section": "2 How well does ChatGPT do in exams and assessments?",
    "text": "2 How well does ChatGPT do in exams and assessments?\nThe performance of ChatGPT in assessments obviously varies by assessment but, speaking personally, I design assessment questions with ChatGPT in mind. What does that mean?\n\nI submit draft questions to ChatGPT and assess the answers\nI aim to set questions for which a ChatGPT answer would not typically receive a passing mark\n\nI understand that I am not alone in this strategy.\nChatGPT, as noted above, bullshits. It is incapable of arithmetic manipulation, or constructing a logical proposition. It does - to be sure - produce text that superficially appears to look lke text that could answer each question. But even a faintly close examination of the answers however tends to show that stated conclusions are not supported by the text that comes before it, statements of “fact” are made up and incorrect, and citations and references are hallucinated, and do not exist.\n\n\n\n\n\n\nTip\n\n\n\nAs educators, we know that ChatGPT exists and adapt our assessments accordingly. Answers obtained via ChatGPT are unlikely to score well.\n\n\n\n2.1 But you can’t tell when I’ve used ChatGPT, right?\nIt’s true that there’s no reliable tool or method to distiguish between bullshit produced by AI and that produced by a human. So, to that extent, a really poor answer might as well have come from a computer as a student."
  },
  {
    "objectID": "llms.html#so-what-good-is-genai-for-me",
    "href": "llms.html#so-what-good-is-genai-for-me",
    "title": "LLMs, genAI, ChatGPT, and the rest",
    "section": "3 So what good is genAI for me?",
    "text": "3 So what good is genAI for me?\nThere are a number of reasonable uses for genAI. It’s often OK at helping restructure or shorten text, although you have to take care to establish for yourself that the meaning hasn’t changed. And it can be useful in revision for setting example questions to test yourself. Just don’t rely on it to mark your work as well, or give you correct answers.\n\n\n\n\n\n\nTip\n\n\n\nChatGPT has some helpful uses, though always exercise caution as it is, fundamentally, a bullshit generator. These include:\n\nhelping to shorten and refine text to make a point more succinctly\ngenerating example questinos on a topic as a revision aid\ngenerating code snippets\nsummarising large bodies of text (though be cautious - ChatGPT can misrepresent text)"
  },
  {
    "objectID": "llms.html#footnotes",
    "href": "llms.html#footnotes",
    "title": "LLMs, genAI, ChatGPT, and the rest",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe like the original part is important. The algorithm is not “remembering” the image(s) it was trained on, it’s constructing a new image constrained by static and the text prompts (hence “generative” AI).↩︎"
  },
  {
    "objectID": "calendar.html",
    "href": "calendar.html",
    "title": "Key Dates",
    "section": "",
    "text": "BM954 Project Timeline (MyPlace )"
  },
  {
    "objectID": "calendar.html#calendar",
    "href": "calendar.html#calendar",
    "title": "Key Dates",
    "section": "1 Calendar",
    "text": "1 Calendar\nThis is an indicative calendar for SIPBS CompBiol Group BM954 projects in AY2024-25.\n\n\n\n\n\n\nWarning\n\n\n\nThis calendar is indicative only and subject to change. Please consult with the official course MyPlace page for submission dates, deadlines, and other timings. Links to useful documents are provided above.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe university is closed on the following dates:\n\n2025-05-26\n2025-07-18\n2025-07-21\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nDr Pritchard is unavailable on the following dates:\n\n2025-06-06\n2025-07-22 to 2025-07-24\n\n\n\n\n1.1 Summer AY2024-25\n\n\n\n\n\n\n\n\n\n\n\nWeek\nDate...Time\nActivity\nResponsibility\n\n\n\n\n1\nw/b Mon 12th May\nSuggested activities\n- Students contact supervisors\n- Read papers in project description\n- Begin literature search\n- Install and configure bioinformatics tools\n\n\n\n1\nw/b Mon 12th May\nTBC\nProject Meeting\n- Introduction\n- Project description\n- Project expectations\n- Learning agreement\n- Project management resources\nLP\n\n\n2\nw/b 19th May\nSuggested activities\n- Continue literature search\n- Practice project management tools\n- Practice computational and bioinformatics tools\n\n\n\n2\nw/b 19th May\nTBC\nProject Meeting\n- Discuss tasks for next week (incl. choose one paper each for mini journal club)\n- Computational and bioinformatics tools\nLP\n\n\n3\nw/b 26th May\nSuggested activities\n- Continue literature search\n- Practice computational and bioinformatics tools\n- Begin project work\n\n\n\n3\nw/b 26th May\nTBC\nProject Meeting\n- Mini journal club. Each student leads a short (15min) discussion of their chosen paper\n- Discuss project progress\nLP\n\n\n4\nw/b 2nd June\nSuggested activities\n- Continue project work\n- Write thesis introduction\n\n\n\n4\nw/b 2nd June\nTBC\nProject Meeting\n- How to write a project thesis\n- Discuss project progress\nLP\n\n\n4\nThu 5th June\nDraft Introduction/Literature Review submission deadline\nStudent\n\n\n5\nw/b 9th June\nSuggested activities\n- Continue literature search\n- Writing thesis outline\n\n\n\n5\nw/b 9th June\nTBC\nProject Meeting\n- Discussion of thesis outlines\n- Project planning discussion\nLP\n\n\n6\nw/b 16th June\nSuggested activities\n- Project work\n\n\n\n6\nw/b 16th June\nTBC\nProject Meeting\n- Project planning discussion\n- Discussion of thesis outlines\nLP\n\n\n7\nw/b 23rd June\nSuggested activities\n- Project work\n\n\n\n7\nw/b 23rd June\nProject Meeting\n- Project planning discussion\n- Discussion of thesis outlines\nLP\n\n\n8\nw/b 30th June\nSuggested activities\n- Project work\n\n\n\n8\nw/b 30th June\nProject Meeting\n- Project planning discussion\n- Discussion of thesis outlines\nLP\n\n\n9\nw/b 7th July\nSuggested activities\n- Project work\n\n\n\n9\nw/b 9th July\nProject Meeting\n- Project planning discussion\n- Discussion of thesis outlines\nLP\n\n\n9\nMonday 7th July\nDraft thesis submission deadline\nStudent\n\n\n10\nw/b 14th July\nSuggested activities\n- Project work\n\n\n\n10\nw/b 14th July\nProject Meeting\n- Project planning discussion\n- Discussion of thesis outlines\nLP\n\n\n11\nw/b 21st July\nSuggested activities\n- Thesis writing\n\n\n\n11\nw/b 21st July\nFeedback on draft thesis returned\nLP\n\n\n12\nw/b 28th July\nSuggested activities\n- Thesis writing\n\n\n\n13\nw/b 4th August\nThesis submission deadline and presentation\n\n\n\n14\nw/b 11th August\nPresentation week"
  },
  {
    "objectID": "time_management.html",
    "href": "time_management.html",
    "title": "Project and Time Management",
    "section": "",
    "text": "This may be your first time working on a scientific project or set of experiments at this kind of scale. The amount and variety of work required can seem overwhelming, especially if the topics and techniques are new. The need to keep a larger-level project and its goals in mind while focusing on a smaller subtask or single experiment can also be tricky, but does get easier with practice."
  },
  {
    "objectID": "time_management.html#data-and-project-management",
    "href": "time_management.html#data-and-project-management",
    "title": "Project and Time Management",
    "section": "1 Data and Project Management",
    "text": "1 Data and Project Management\nThese Notebooks on data and project management were prepared by Dr. Pritchard and Dr. Feeney for the 2022 session of BM432, but are also applicable to MSc projects.\n\nProject management guidelines\n\n01-Data Analysis in the Research Cycle\n02-Data and Project Management\n03-Reproducibility, Replicability, and FAIR Guidelines\n04-Keeping a Lab Notebook to Document Your Project\n05-Reference Management\n06-How to Use Reference Management Software\n\nNCSC advice for backing up your data\n\n\n1.1 How Dr Pritchard backs up his data\n\n\n\n\n\n\nTip\n\n\n\nThe university has a set of recommendations for how you should save, share, and back up your data.\n\n\nFor each individual computer I:\n\n…work on data I cannot reconstruct easily using a cloud storage method that integrates with my filesystem.\n\nI work on the data on the local machine, but changes are (automatically) propagated to a cloud service. This allows me to maintain a consistent state of my work across several machines at several sites, and automatically reproduces the material at several goegraphical locations in the cloud.\nWays to do this include OneDrive, iCloud, DropBox, GitHub, GitLab, BitBucket and so on\n\n…back up each computer to a local dedicated storage system, e.g. a NAS (network-attached storage) with a high-availability file system (i.e. running a variant of RAID or similar)\n\nThis backup is run using an automated tool, such as Apple’s Time Machine, or Carbon Copy Cloner\n\n…additionally back up each computer to an external hard drive\n\nI use at least two hard drives per machine, and I swap these between two distinct physical locations at regular intervals (usually weekly)\nThis backup is also run using an automated tool, such as Apple’s Time Machine, or Carbon Copy Cloner"
  },
  {
    "objectID": "time_management.html#laboratory-notebooks-advice",
    "href": "time_management.html#laboratory-notebooks-advice",
    "title": "Project and Time Management",
    "section": "2 Laboratory Notebooks: Advice",
    "text": "2 Laboratory Notebooks: Advice\n\nA Quick Guide to Organizing Computational Biology Projects\n\nMy favourite introduction to the topic. It clearly lays out a template and a rationale for each decision - LP\n\nHow to Keep a Lab Notebook for Bioinformatic Analyses\n\nA guest blog at AddGene which makes some choices I would question. They’re probably fine for one small project, but I’d worry about scaling up, and lack of clarity in the longer term - LP\n\nTen Simple Rules for a Computational Biologist’s Laboratory Notebook\n\nOverall sound advice, but short on recommending specific solutions - LP\n\n10 File Management Tips to Keep Your Electronic Files Organized\n\nGood general advice, and not only for bioinformatics projects - LP\n\nHow to keep a lab notebook\n\nFirst-hand experience in quotes from a number of scientists. Learn from their fails - LP\n\n10 Tips For Organizing Your Lab Book\n\nVery lab-focused, but good general points - LP"
  },
  {
    "objectID": "time_management.html#time-and-project-management-advice",
    "href": "time_management.html#time-and-project-management-advice",
    "title": "Project and Time Management",
    "section": "3 Time and Project Management: Advice",
    "text": "3 Time and Project Management: Advice\n\n8 Time Management Tips for Students\n\nReally good general advice, from Harvard - LP\n\nKanban boards\n\nKanban is a flexible way to manage projects that allows for rearrangement and rescheduling in the middle of the work. It doesn’t require any particular tool or software (I used to use sticky notes), but Trello does a good job of this - LP\n\nPomodoro Technique\n\nI use the Pomodoro technique (with BeFocused, see below) to help me focus when I need to get through long writing tasks. I find it most useful to avoid burning out on a large piece of work - LP"
  },
  {
    "objectID": "time_management.html#time-and-project-management-resources",
    "href": "time_management.html#time-and-project-management-resources",
    "title": "Project and Time Management",
    "section": "4 Time and Project Management: Resources",
    "text": "4 Time and Project Management: Resources\n\nTrello\n\nA widely-used project management tool, but tailored towards teams. It probably does more than you need - LP\n\nAsana\n\nSeems to be similar to Trello. I haven’t used it, myself - LP\n\nBenchling\n\nAn electronic lab notebook platform that is widely used in industry. Academic use is free, and having it on your CV can be an advantage, so I’m told - LP\n\nPomodoro Timer\n\nFree timer for Pomodoro. Just does the timing, which may be all you need - LP\n\nBeFocused\n\nPomodoro timer with additional project management and time categorisation features. It’s the tool I use - LP\n\nForest\n\nA focusing app. I hear good things but I don’t use it - LP\n\nEverNote\n\nNote-taking app. I know people who love it, but it didn’t grab me - LP"
  },
  {
    "objectID": "learning_resources.html",
    "href": "learning_resources.html",
    "title": "Learning Resources",
    "section": "",
    "text": "Bioinformatics, computational biology, and coding are skills that you can learn and hone through regular practice. There are many online resources, tutorials, and learning platforms that can help you develop these skills independently. This page collects some of those resources together as a place for you to begin exploring this area."
  },
  {
    "objectID": "learning_resources.html#bioinformatics",
    "href": "learning_resources.html#bioinformatics",
    "title": "Learning Resources",
    "section": "1 Bioinformatics",
    "text": "1 Bioinformatics\n\nRosalind - A gamified series of structured problems that become progressively more difficult, and a good way to learn coding as well as bioinformatics - LP\nEMBL-EBI - Introductory bioinformatics material offered by the main European bioinformatics research centre - LP\nGalaxy - Training materials curated by the international Galaxy community - LP\nIBioIC Introduction to Bioinformatics - Materials for a course I presented in 2017-2018 - LP\nCoursera - Online courses in bioinformatics, collated by Coursera - LP\nEdX - Online courses in bioinformatics, collated by EdX - LP"
  },
  {
    "objectID": "learning_resources.html#programming",
    "href": "learning_resources.html#programming",
    "title": "Learning Resources",
    "section": "2 Programming",
    "text": "2 Programming\n\n2.1 General\n\nSoftware Carpentry - “Software Carpentry has been teaching researchers the computing skills they need to get more done in less time and with less pain,” as the site says. I’m a fully-qualified SWC instructor with ten years’ experience, and it’s a great introduction to key concepts, covering Python and R - LP\nAdvent of Code - Yearly Christmas-themed puzzles that you can solve in any way you like - LP\nFree Code Camp - Free training in a number of areas - LP\nCodecademy - A range of free online training courses - LP\nSpaceTraders - Gamified learning through a web API - LP\nCodinGame - A gamified platform that supports learning to code in over 20 languages - LP\nCheckIO - Another gamified way to practice coding - LP\nCodeCombat - Another game-based way to learn and practice coding - LP\n\n\n\n2.2 Python\n\nRealPython - Many tutorials and other learning paths for Python - LP\nPyBites - Python coding challenges, and there are accompanying coaching and podcast materials - LP\nThe Flask Megatutorial - A thorough and well-paced Flask tutorial - LP\n[Python Programming and Numerical Methods] - Computers don’t always deal with numbers the way you might expect, and understanding what they actually do will help avoid problems = LP\n\n\n\n2.3 R\n\nWhat They Forgot to Teach You About R - Assuming they taught you anything about R at all, this is not a bad place to go next - LP\n\n\n\n2.4 SQL\n\nSQL Murder Mystery - Knowing SQL can be incredibly helpful in managing your data in bioinformatics (or any other field), and this is a fun way to learn new things - LP\n\n\n\n2.5 CSS\n\nCSS Grid Garden - CSS comes up an awful lot when developing applications or websites (as it did building this site!), and this is a nice way to understand how the grid layout works - LP\nFlexbox Froggy - Another CSS layout tool practice game, this time for the flexbox - LP\nFlexbox Zombies - As above but with added undead - LP\nCoding Fantasy - Learn Flexbox and Grid at the same time! - LP\nCSS Diner - Gamified CSS selector practice - LP\n\n\n\n2.6 JavaScript\n\nReact Megatutorial - A thorough introduction to the React framework - LP"
  },
  {
    "objectID": "learning_resources.html#data-analysis-and-data-science",
    "href": "learning_resources.html#data-analysis-and-data-science",
    "title": "Learning Resources",
    "section": "3 Data Analysis and Data Science",
    "text": "3 Data Analysis and Data Science\n\nData Carpentry - A companion programme to Software Capentry (and I am also a fully-qualified DC instructor). Again, it’s a great introduction to key concepts in Python and R - LP\nKaggle - Online data science courses - LP\nData Camp - A wide range of data science courses - LP\nDataQuest - Learn data science through a series of challenges - LP\nCoursera - Data science courses available through Coursera - LP\nEdX - A collection of online data science courses - LP"
  },
  {
    "objectID": "learning_resources.html#other-computing-skills",
    "href": "learning_resources.html#other-computing-skills",
    "title": "Learning Resources",
    "section": "4 Other Computing Skills",
    "text": "4 Other Computing Skills\n\nPrinciples for Writing Clean Code - However you choose to learn to code, in whatever language, encountering and using these principles will make your life so much easier - LP\nHow Much Can Your Computer Do In A Second - Some things that seem like they might be hard on a computer are quite easy; some things that seems like they should be easy are actually hard. It’s worth gaining an intuition about the difference - LP\nCryptoHack - Learn modern cryptography while playing games - LP\nProject Euler - A series of mathematical problems to test your coding skills - LP\n\n\n4.1 Git\n\nOh My Git! - Gamified introduction to git - LP\nGitHub Minesweeper - Learn collaborative git project management with a bot - LP\nBitbucket git Tutorial - An introduction to git provided by Bitbucket - LP\nLearn git Branching - Interactive introduction to git branching - LP"
  },
  {
    "objectID": "online_resources.html",
    "href": "online_resources.html",
    "title": "Online Resources",
    "section": "",
    "text": "Computational Biology is unusually accessible as an applied science in part because so much can be done by an individual on modest hardware without access to a laboratory or computing cluster. All you need to bring is your brain.\nA large part of the reason for the accessibility of the topic is the sustained drive for Open Science practised by bioinformatics, computational biologists, and other scientists. These have encouraged, and sometimes demanded, open, free, FAIR (findable, accessible, interoperable, reusable) data, which has benefited us all.\nThis page lists some of the incredibly valuable open data resources that might be of use to you in your project. It is not an exhaustive list."
  },
  {
    "objectID": "online_resources.html#sequence-data-repositories-including-annotated-genome-data",
    "href": "online_resources.html#sequence-data-repositories-including-annotated-genome-data",
    "title": "Online Resources",
    "section": "1 Sequence data repositories (including annotated genome data)",
    "text": "1 Sequence data repositories (including annotated genome data)\n\nNCBI - the repository of record for many datasets, not just sequence data\n\nAssembly - assembled genomes and other metadata\nGenBank - all publicly available DNA sequences\nNucleotide - aggregated data from GenBank, RefSeq, and elsewhere\nRefSeq - curated, non-redundant, gDNA, transcript, and protein sequences\nSRA - sequencing read data\n\nUniProt - protein sequence and annotation data\nEnsembl - vertebrate genome data\n\nEnsembl Bacteria - bacterial genome data\nEnsembl Fungi - fungal genome data\nEnsembl Plants - plant genome data\nEnsembl Protists - protist genome data\n\nInterPro - protein families and sequence domains"
  },
  {
    "objectID": "online_resources.html#structural-data-repositories",
    "href": "online_resources.html#structural-data-repositories",
    "title": "Online Resources",
    "section": "2 Structural data repositories",
    "text": "2 Structural data repositories\n\nRCSB-PBD - the repository of record for biomolecular structure data\nEMBL AlphaFold - EMBL’s AlphaFold predictions for multiple organisms"
  },
  {
    "objectID": "online_resources.html#transcriptome-data-repositories",
    "href": "online_resources.html#transcriptome-data-repositories",
    "title": "Online Resources",
    "section": "3 Transcriptome data repositories",
    "text": "3 Transcriptome data repositories\n\nGEO - transcriptome experiment (microarray, RNAseq etc., data\nHTCA - human transcriptome cell atlas"
  },
  {
    "objectID": "online_resources.html#molecular-interaction-databases",
    "href": "online_resources.html#molecular-interaction-databases",
    "title": "Online Resources",
    "section": "4 Molecular interaction databases",
    "text": "4 Molecular interaction databases\n\nSTRING - known and predicted interactions\nBioGrid - curated interactions and post-translational modifications\nIntAct - EMBL-EBI’s database of interactions"
  },
  {
    "objectID": "online_resources.html#biological-models",
    "href": "online_resources.html#biological-models",
    "title": "Online Resources",
    "section": "5 Biological models",
    "text": "5 Biological models\n\nBioModels - mathematical models of biological systems"
  },
  {
    "objectID": "online_resources.html#specialised-functional-databases",
    "href": "online_resources.html#specialised-functional-databases",
    "title": "Online Resources",
    "section": "6 Specialised functional databases",
    "text": "6 Specialised functional databases\n\nPHI-Base - curated database of pathogen-host interactions\nCAZy - curated database of carbohydrate-acive enzymes"
  },
  {
    "objectID": "online_resources.html#taxonomic-and-other-classification-resources",
    "href": "online_resources.html#taxonomic-and-other-classification-resources",
    "title": "Online Resources",
    "section": "7 Taxonomic and other classification resources",
    "text": "7 Taxonomic and other classification resources\n\nNCBI Taxonomy\n\nWidely-used, but not as widely trusted, as it is often at odds with other classification databases - LP\n\nGTDB\n\nExcellent genome-based microbial taxonomy and classification database and resource - LP\n\ngenomeRxiv\n\nGenome-based, taxonomy-independent classification. I work on this - LP\n\nEnterobase\n\nThe central resource for enteric bacteria genomic variation and classification - LP\n\nPhytoBacExplorer\n\nLike Enterobase, but for plant pathogenic bacteria - LP"
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Bioinformatics Software tools",
    "section": "",
    "text": "This page provides links to software tools and packages - some with web interfaces, some you would need to download and install - that may be useful for your project."
  },
  {
    "objectID": "software.html#programming",
    "href": "software.html#programming",
    "title": "Bioinformatics Software tools",
    "section": "1 Programming",
    "text": "1 Programming\n\nVisual Studio Code - An excellent editor for writing your own code, in any language, with support for a wide range of helpful extensions - LP\nAnaconda - A data science platform supporting Python, R, and other languages, that is cross-platform and simplifies installing some packages - LP\nProject Jupyter - A standard framework for coding in a notebook format - LP\nSnakemake - Reproducible bioinformatics analysis framework - LP\nNextFlow - Reproducible, scalable computational analysis framework - LP\n\n\n1.1 Python\n\nBiopython - The standard bioinformatics packages for Python - LP\n\n\n\n1.2 R\n\nCRAN - The Comprehensive R Archive Network - it’s where to go for R packages - LP\nPosit/RStudio - The makers of RStudio - the user-friendly way to use R - LP\nBioconductor - R’s compendium of computational biology software - LP"
  },
  {
    "objectID": "software.html#online-tool-collections",
    "href": "software.html#online-tool-collections",
    "title": "Bioinformatics Software tools",
    "section": "2 Online tool collections",
    "text": "2 Online tool collections\n\nGalaxy (Europe) - The European Galaxy service for scientific workflows - LP\nEBI Tools - European Bioinformatics Institute online tool collection - LP"
  },
  {
    "objectID": "software.html#sequence-analysis",
    "href": "software.html#sequence-analysis",
    "title": "Bioinformatics Software tools",
    "section": "3 Sequence Analysis",
    "text": "3 Sequence Analysis\n\nNCBI BLAST - NCBI’s BLAST service - LP\nJalView - Widely-used sequence analysis platform - LP\nPolyView - Coevolution and protein structure annotation server - LP\nCoevLab - Protein covariation analysis server - LP\nibis2analyzer - Phylogenetically-informed covariation analysis server - LP\nConSurf - Evolutionary conservation estimation tool - LP\n\n\n3.1 Sequence Alignment\n\nMAFFT - Fast multiple sequence alignment package - LP\nT-COFFEE - Very capable and diverse multiple sequence alignment package - LP\n\nT-COFFEE online server\n\nClustal Omega - Fast multiple sequence alignment package - LP"
  },
  {
    "objectID": "software.html#protein-structure",
    "href": "software.html#protein-structure",
    "title": "Bioinformatics Software tools",
    "section": "4 Protein Structure",
    "text": "4 Protein Structure\n\nAlphaFold Colab - Public interface to AlphaFold structural prediction - LP\nSWISSMODEL - Structural homology modelling server - LP\nDeepView/Swiss PDB Viewer - Protein structure visualisation that integrates with SWISSMODEL - LP\nPyMol - Standard package for visualising and analysing protein structure - LP\nUCSF Chimera - Very capable structure visualisation and modelling package - LP\nRCSB-PBS’s list of molecular graphics software - Comprehensive list of structure visualisation options - LP"
  },
  {
    "objectID": "software.html#phylogenetics",
    "href": "software.html#phylogenetics",
    "title": "Bioinformatics Software tools",
    "section": "5 Phylogenetics",
    "text": "5 Phylogenetics\n\nIQ-TREE - Maximum-likelihood phylogenetic reconstruction - LP\nRAxML - Maximum-likelihood phylogenetic reconstruction - LP\nSplitsTree - Recombination-aware phylogenetic reconstruction - LP\nFigTree - Lightweight phylogenetic tree visualisation - LP\nDendroscope Very capable phylogenetic tree viewer - LP"
  },
  {
    "objectID": "primer_env.html",
    "href": "primer_env.html",
    "title": "Primer: Environment Setup",
    "section": "",
    "text": "This page runs through the process of setting up a computing environment similar to that you will need for your AY2024-25 project.\nThe primer walks through the following steps:"
  },
  {
    "objectID": "primer_env.html#set-up-a-project-folder-from-a-template",
    "href": "primer_env.html#set-up-a-project-folder-from-a-template",
    "title": "Primer: Environment Setup",
    "section": "1 Set up a project folder from a template",
    "text": "1 Set up a project folder from a template\n\n\n\n\n\n\nNote\n\n\n\nPlease read the Noble (2009) and Sandve et al. (2013) papers at the Ten Great Papers page, and the README.md file at the template repository to understand the principles behind the organisation of this template.\n\nTen Great Papers\nBioinformatics project template\nNoble (2009)\nSandve et al. (2013)\n\n\n\n\n1.1 Download and extract the project template\n\nUse your browser to visit the project template repository at https://github.com/sipbs-compbiol/template_bioinformatics_project.\nClick on the small triangle at the right of the green Code button to see the download options for the template.\n\n\n\n\nContext menu for the Code download button\n\n\n\nClick on Download ZIP to download a .zip format compressed file containing the repository template to your own computer, in the usual way you would download a file using your browser. This will place a file called template_bioinformatics_project-master.zip into that location.\n\n\n\n\n\n\n\nWhere should I save this file?\n\n\n\n\n\nWhen you uncompress the repository template, it will expand into the full set of folders and subfolders. You can move this folder tree after you have uncompressed the file, or you can move the .zip file to the directory where you want to keep the project files (e.g. under Documents on a Mac), and uncompress it there. The choice is yours.\n\n\n\n\nUncompress the file (e.g. by double-clicking on a Mac). This will produce a folder called template_bioinformatics_project-master in the same folder as the compressed file.\n\n\n\n\n\n\n\nMake sure you acturally uncompress the file\n\n\n\nSome operating systems, such as Windows, allow you to work with compressed files as if they had been uncompressed without actually uncompressing them.\nYou do need to fully uncompress the repository template to work with it.\n\n\n\nStart a terminal and navigate to the top-level folder in the repository template.\n\n\n\n\n\n\n\nTip\n\n\n\nI saved the .zip file in the Documents folder on my computer, and uncompressed that file in the same location. My project template is therefore in the ~/Documents/template_bioinformatics_project-master directory. I can navigate to this location using the cd command, and check the contents using the command ls.\n[NOTE: The % symbol is the command prompt, not part of the command itself. This may look different on your computer (e.g. it might be a dollar sign: $).]\n% cd ~/Documents/template_bioinformatics_project-master\n% ls\nLICENSE      README.md    _config.yml  assets/      data/        docs/        notebooks/   results/     scripts/"
  },
  {
    "objectID": "primer_env.html#create-and-activate-a-conda-environment-for-your-project",
    "href": "primer_env.html#create-and-activate-a-conda-environment-for-your-project",
    "title": "Primer: Environment Setup",
    "section": "2 Create and activate a conda environment for your project",
    "text": "2 Create and activate a conda environment for your project\n\n\n\n\n\n\nWarning\n\n\n\nBefore beginning this part of the guide, you should make yourself familiar with the conda documentation at the link below:\n\nconda tutorial\n\n\n\n\n\n\n\n\n\nYou will need to have already installed the conda package for your operating system.\n\n\n\nOn Mac and Linux, this is usually a straightforward software installation, and you can follow the instructions at the link below:\n\nInstalling Anaconda on Mac and Linux\n\nOn Windows, you must distinguish between installing Anaconda under Windows, and installing it under WSL (Windows Subsystem Linux). You will be using WSL for your project, and you must install conda within WSL (WSL cannot see the version of conda installed under the Windows operating system; in any case the software that runs on a Linux OS will not typically run on a Windows OS). There are several online guides to help with this.\n\nInstalling Conda/Anaconda in WSL\nInstalling Miniconda in WSL\n\n\n\n\nCreate a new conda environment by issuing the command below.\n\n% conda create --name bm954_project -y\n\n\n\n\n\n\nBreaking down the components of the command line\n\n\n\n\n\nAs above, the % symbol is the command prompt - not part of the command itself. You do not type this when entering and running your command.\n\nconda: you are running the conda program and instructing it to carry out an action\ncreate: this is the action you are instructing conda to undertake, to create a new environment\n--name bm954_project: this option tells conda what name the new environment is to be known by; you can choose any name you like, and do not have to use bm954_project if you would prefer to use something else. However, it is usually a good idea to name the environment such that you can tell immediately what it is used for\n-y: this answers all the optional questions about installation which conda might ask with “yes”\n\n\n\n\n\nActivate the new conda environment you have just created by issuing the command below (if you called your environment something other than bm954_project, then use that name instead, here).\n\n% conda activate bm954_project\nYou should notice that the left-most part of your command prompt changes from (base) to (bm954_project) (or whatever name you used for your environment).\n\n\n\n\n\n\nHow to check what environments are available\n\n\n\n\n\nYou can use the command conda info --envs (demonstrated below) to list all the environments that your installation of conda is aware of:\n% conda info --envs\n# conda environments:\n#\nbase                     /Users/lpritc/opt/anaconda3\n2022_david               /Users/lpritc/opt/anaconda3/envs/2022_david\n2022_nora                /Users/lpritc/opt/anaconda3/envs/2022_nora\nalgo_2022_py39           /Users/lpritc/opt/anaconda3/envs/algo_2022_py39\naoc2021                  /Users/lpritc/opt/anaconda3/envs/aoc2021\naoc2022                  /Users/lpritc/opt/anaconda3/envs/aoc2022\naoc2023                  /Users/lpritc/opt/anaconda3/envs/aoc2023\nbm432_py310              /Users/lpritc/opt/anaconda3/envs/bm432_py310\nbm954_project         *  /Users/lpritc/opt/anaconda3/envs/bm954_proj\n[...]"
  },
  {
    "objectID": "primer_env.html#install-ncbi-genome-download-and-recover-some-genomes",
    "href": "primer_env.html#install-ncbi-genome-download-and-recover-some-genomes",
    "title": "Primer: Environment Setup",
    "section": "3 Install ncbi-genome-download and recover some genomes",
    "text": "3 Install ncbi-genome-download and recover some genomes\nOne of the main advantages of conda is that it handles technical issues of package management (the process of installing and configuring software tools) and makes using them much easier. The typical command we might use would be conda install &lt;PROGRAM NAME&gt; where &lt;PROGRAM NAME&gt; is replaced by the name of the software you want to install.\nIn particular, conda is a common software distribution route for bioinformatics software, through the conda channel called bioconda.\n\n\n\n\n\n\nImportant\n\n\n\nIn order to use bioconda on your computer, you will need to configure the channel.\n\n\n\n3.1 Configuring the bioconda channel\n\n\n\n\n\n\nWarning\n\n\n\nBefore installing bioconda you should be awware of the information at the link below:\n\nbioconda tutorial\n\n\n\nTo set up the bioconda channel on your computer, you should follow the instructions at the bioconda website, and issue the four commands below, in sequence:\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\nYou only need to do this once on your computer, and bioconda will then be available in any environment you create.\n\n\n3.2 Installing ncbi-genome-download\nTo install the ncbi-genome-download package, we use the conda install command, as noted above. This will take a short while to download and configure all the dependencies of the tool (packages that need to be installed for the software to run). The process you see in the terminal should resemble that shown below.\n % conda install ncbi-genome-download -y\n Channels:\n - conda-forge\n - bioconda\n - defaults\nPlatform: osx-64\nCollecting package metadata (repodata.json):\n[...]\nThe following NEW packages will be INSTALLED:\n\n  appdirs            conda-forge/noarch::appdirs-1.4.4-pyh9f0ad1d_0\n[...]\n  xz                 conda-forge/osx-64::xz-5.2.6-h775f41a_0\n\n\n\nDownloading and Extracting Packages:\n\nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\nOnce this is complete, the ncbi-genome-download program should be available to you. You can test this by asking the software for its help guide, using the command ncbi-genome-download -h as demonstrated below:\n% ncbi-genome-download -h\nusage: ncbi-genome-download [-h] [-s {refseq,genbank}] [-F FILE_FORMATS] [-l ASSEMBLY_LEVELS] [-g GENERA] [--genus GENERA]\n                            [--fuzzy-genus] [-S STRAINS] [-T SPECIES_TAXIDS] [-t TAXIDS] [-A ASSEMBLY_ACCESSIONS]\n                            [--fuzzy-accessions] [-R REFSEQ_CATEGORIES] [--refseq-category REFSEQ_CATEGORIES] [-o OUTPUT]\n                            [--flat-output] [-H] [-P] [-u URI] [-p N] [-r N] [-m METADATA_TABLE] [-n] [-N] [-v] [-d] [-V]\n                            [-M TYPE_MATERIALS]\n                            groups\n[...]\n\n\n3.3 Downloading a set of genome sequences\n\n\n\n\n\n\nWarning\n\n\n\nBefore downloading genomes, you should familiarise yourself with the information at the links below:\n\nNCBI Assembly Level definitions\nncbi-genome-download documentation\nNCBI genome file formats\n\n\n\nFor your project, you will want to download all complete genome sequences for a single genus of bacteria. This section of the guide will illustrate that process for the genus Dickeya.\nThe command to download all genomes of a single named genus of bacteria is ncbi-genome-download --genera \"&lt;GENUS&gt;\" bacteria, where &lt;GENUS&gt; is replaced by the actual name of the genus you want to download.\nTo restrict downloaded genomes only to those that are complete, we use the option --assembly-levels complete.\nTo download all available sequence data, including GBFF (annotated) and FASTA (sequence data only) we need to use the option --formats all\nIf we wanted the program to keep us informed about what it was doing, we would ask it to be verbose by using the option --verbose or -v\nPutting this together to download genomes for the genus Dickeya we would use the command as demonstrated below:\n% ncbi-genome-download --assembly-levels complete --genera \"Dickeya\" --formats all --verbose bacteria\nThis will place the downloaded genomes into individual subdirectories, under the subdirectory refseq. These genome are compressed using the gzip program. We can tell this because the filnames end in .gz.\n % tree refseq\nrefseq\n└── bacteria\n    ├── GCF_000147055.1\n    │   ├── GCF_000147055.1_ASM14705v1_assembly_report.txt\n    │   ├── GCF_000147055.1_ASM14705v1_assembly_stats.txt\n    │   ├── GCF_000147055.1_ASM14705v1_cds_from_genomic.fna.gz\n    │   ├── GCF_000147055.1_ASM14705v1_feature_table.txt.gz\n    │   ├── GCF_000147055.1_ASM14705v1_genomic.fna.gz\n    │   ├── GCF_000147055.1_ASM14705v1_genomic.gbff.gz\n    │   ├── GCF_000147055.1_ASM14705v1_genomic.gff.gz\n    │   ├── GCF_000147055.1_ASM14705v1_protein.faa.gz\n    │   ├── GCF_000147055.1_ASM14705v1_protein.gpff.gz\n    │   ├── GCF_000147055.1_ASM14705v1_rna_from_genomic.fna.gz\n    │   ├── GCF_000147055.1_ASM14705v1_translated_cds.faa.gz\n[...]    \nThe downloaded files are in a number of different formats, and you will not need to use all of them in your project."
  },
  {
    "objectID": "primer_env.html#summary",
    "href": "primer_env.html#summary",
    "title": "Primer: Environment Setup",
    "section": "4 Summary",
    "text": "4 Summary\nThis page provided a gude to setting up your project analogously to preparing your bench for laboratory work.\nYou first used a template to set up your project’s folder structure, which is a little like making sure you have a well-organised work area.\nYou then installed conda and set up a new environment for your project, which plays a similar role to making your your bench is clean and practising a kind of “aseptic technique” for making sure that installed bioinformatics tools don’t conflict with each other.\nYou then installed ncbi-genome-download and obtained a set of bacterial genomes directly from NCBI. This is similar to acquiring a set of strains from a collection, and having them ready to work with on your benchtop.\nYour next steps using these genomes will be to prepare them so that they can be used in your experiments."
  },
  {
    "objectID": "calendar_ibioic.html",
    "href": "calendar_ibioic.html",
    "title": "Key Dates (IBioIC)",
    "section": "",
    "text": "IBioIC Project Timeline (MyPlace )"
  },
  {
    "objectID": "calendar_ibioic.html#calendar",
    "href": "calendar_ibioic.html#calendar",
    "title": "Key Dates (IBioIC)",
    "section": "1 Calendar",
    "text": "1 Calendar\nThis is an indicative calendar for SIPBS CompBiol Group IBioIC project supervision in AY2024-25.\n\n\n\n\n\n\nWarning\n\n\n\nThis calendar is based on the IBioIC project guidelines document, but is indicative only and subject to changeindicative only and subject to change**. Please consult with the official course MyPlace page for submission dates, deadlines, and other timings. Links to useful documents are provided above.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe university is closed on the following dates:\n\n2025-05-26: university closed\n2025-07-18: university closed\n2025-07-21: university closed\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nDr Pritchard is unavailable on the following dates:\n\n2025-06-06\n2025-07-22 to 2025-07-24\n\n\n\n\n1.1 Summer AY2024-25\n\n\n\n\n\nWeek\nDate\nActivity\nResponsibility\n\n\n\n\n1\nw/b 12th May\nFace-to-face meeting between academic supervisor and student &lt;br /&gt;Literature review begins\nStudent\n\n\n2\nw/b 19th May\nPlacement starts\nStudent\n\n\n4\nw/b 2nd June\nSubmission of draft literature review to academic supervisor(s)\nStudent\n\n\n6\nw/b 16th June\nFeedback on literature review (expected)\nAcademic Supervisor\n\n\n7\nw/b 23rd June\nMid placement review\nStudent/IBioIC Skills Team\n\n\n10\nw/b 14th July\nSubmission of draft thesis to academic supervisor(s)\nStudent\n\n\n11\nFriday 25th July\nPlacement ends\nStudent/Industrial Partner\n\n\n12\nw/b 28th July\nFeedback on final thesis (expected)\nAcademic Supervisor\n\n\n12\nFriday 1st August\nFinal date for submission of in-work assessment\nIndustrial Partner\n\n\n14\nMonday 11th August\nSubmission of final thesis\nStudent\n\n\n14\nWednesday 13th August\nMSc presentation to IBioIC team\nStudent\n\n\n14\nThursday 14th August\nThesis presentation day\nStudent"
  },
  {
    "objectID": "figures.html",
    "href": "figures.html",
    "title": "Preparing Thesis Figures",
    "section": "",
    "text": "Determine what message you want the reader to take from your figure, and the most effective way of conveying that point\nRemove any extraneous or distracting data that distracts from the main message of your figure (taking care not to make the figure misleading by doing so)\nDetermine how large the figure needs to be: how much space will it take up on a page?\nWill it be easy for your reader to see key details if the figure is this size?\nCheck that the figure is clear and not pixellated: will your reader be able to see all the important details? Is the resolution good enough?\n\n\nYou should always prepare figures in vector format (i.e. PDF, PS, or SVG) where possible to avoid pixellation issues.\n\n\nCheck that the colour scheme you have chosen is colour-blind friendly and not visually jarring\nCheck that any fonts used are legible at the size printed\nFigure titles should give a concise “take-home message” conveying the result(s) shown in the figure\nFigure legends should give enough detail about the experiment for the reader to understand what was done (the figure should be able to stand on its own)\n\n\nDr Feeney’s guidance on writing good figure titles and legends (with examples)"
  },
  {
    "objectID": "figures.html#figure-preparation-checklist",
    "href": "figures.html#figure-preparation-checklist",
    "title": "Preparing Thesis Figures",
    "section": "",
    "text": "Determine what message you want the reader to take from your figure, and the most effective way of conveying that point\nRemove any extraneous or distracting data that distracts from the main message of your figure (taking care not to make the figure misleading by doing so)\nDetermine how large the figure needs to be: how much space will it take up on a page?\nWill it be easy for your reader to see key details if the figure is this size?\nCheck that the figure is clear and not pixellated: will your reader be able to see all the important details? Is the resolution good enough?\n\n\nYou should always prepare figures in vector format (i.e. PDF, PS, or SVG) where possible to avoid pixellation issues.\n\n\nCheck that the colour scheme you have chosen is colour-blind friendly and not visually jarring\nCheck that any fonts used are legible at the size printed\nFigure titles should give a concise “take-home message” conveying the result(s) shown in the figure\nFigure legends should give enough detail about the experiment for the reader to understand what was done (the figure should be able to stand on its own)\n\n\nDr Feeney’s guidance on writing good figure titles and legends (with examples)"
  },
  {
    "objectID": "figures.html#a-guide-to-figure-preparation",
    "href": "figures.html#a-guide-to-figure-preparation",
    "title": "Preparing Thesis Figures",
    "section": "2 A guide to figure preparation",
    "text": "2 A guide to figure preparation\n\nRefer back to the Data presentation and figure preparation (BM432 workshop 6) materials as needed.\nPoints of View - In my opinion the definitive guide to graphic design for scientific figures - LP\nMaking model figures (slides used in our regular meeting discussion)\nBeyond Bar and Line Graphs: Time for a New Data Presentation Paradigm - A compelling case for why you should never use bar graphs, and especially not dynamite plots - LP\nRead Ten Simple Rules for Better Figures - Yet another excellent “Ten Simple Rules…” article - LP\nDigital Images Are Data: And Should Be Treated as Such - It’s natural to think of images as being “neutral” in some way, but they are not - LP\nTen common statistical mistakes to watch out for when writing or reviewing a manuscript - Another “Ten Simple Rules…” article - LP\nFundamentals of graphic design—essential tools for effective visual science communication - A good, short summary of graphic design principles relevant to scientific communication - LP\n11 Graphic Design Tips to Create Images Like a Pro - Economical advice for powerful graphic design - LP"
  },
  {
    "objectID": "figures.html#other-useful-resources",
    "href": "figures.html#other-useful-resources",
    "title": "Preparing Thesis Figures",
    "section": "3 Other Useful Resources",
    "text": "3 Other Useful Resources\n\nBiorender - Useful clipart and images for building your own figures, but beware that the licensing arrangements appear to overreach greatly - LP\nImageJ Basics - The standard open source image analysis software - LP\nCoblis — Color Blindness Simulator - It’s kind to consider the needs of others, so always check your images for colourblindness accessibility - LP\nData visualization with ggplot2 :: Cheat Sheet - ggplot is an amazing way to generate powerful graphs, though there can be a learning curve, especially if you don’t yet know R - LP"
  },
  {
    "objectID": "figures.html#dr-feeneys-pet-peeves-for-figures",
    "href": "figures.html#dr-feeneys-pet-peeves-for-figures",
    "title": "Preparing Thesis Figures",
    "section": "4 Dr Feeney’s pet peeves for figures",
    "text": "4 Dr Feeney’s pet peeves for figures\n\nWhy You Must Plot Your Growth Data On a Semi-log Graph - TBH, this is trivial to do now in most graphic packages, so there’s no excuse - LP\nMake sure you include a scale on any images that need them (e.g., micrographs, phylogenetic trees)\nBy convention, figure titles and legends are presented below the corresponding figure, while table titles are presented above the corresponding table.\nMake sure your text is formatted correctly within your figure (e.g., species names should be italicized, gene and protein names should be formatted correctly)"
  },
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Writing Bioinformatics Methods",
    "section": "",
    "text": "Important\n\n\n\nBioinformatics methods sections should convey the same level of information as a wet-lab methods section. They should be:\n\nclear\nreproducible\nadequately cite the tools used"
  },
  {
    "objectID": "methods.html#tips-for-writing-a-great-methods-section",
    "href": "methods.html#tips-for-writing-a-great-methods-section",
    "title": "Writing Bioinformatics Methods",
    "section": "1 Tips for Writing a Great Methods Section",
    "text": "1 Tips for Writing a Great Methods Section\n\nDescribe your experimental methods in enough detail that your reader could replicate the experiments.\nYour methods section is not a protocol (a step-by-step list of everything that was done.) You may assume that your reader is a competent scientist with the skills to perform basic lab calculations, techniques, etc.\nCite the appropriate literature (i.e. for any recipes, tools including software, and protocols you have used).\nDo not include results or rationale for performing experiments (these belong elsewhere in your thesis).\nBe clear and concise; eliminate unnecessary words and steps.\nMake sure that your methods section includes all of the materials and methods you used in your thesis (This includes any bioinformatics methods such as BLAST!)\nAsk a friend or colleague to read your methods section and give feedback.\n\n\n\n\n\n\n\nTip\n\n\n\nLook at papers that have used similar methods: how are these methods sections written? Though take care as many papers underdescribe bioinformatics methods.\n\n\nYou want to make sure that your methods section generally follows the conventions in your field, so that readers will be able to understand it more easily.\nA few examples of specific conventions:\n\nfor wet-lab projects, centrifuge speeds are always given in xg, not in rpm or rcf\nfor science communication projects, the design of your intervention/survey belongs in the methods section\nfor bioinformatics projects, always include the version number and citation for any software used and details of parameters, etc."
  },
  {
    "objectID": "methods.html#what-i-look-for-when-reviewing-bioinformatics-methods",
    "href": "methods.html#what-i-look-for-when-reviewing-bioinformatics-methods",
    "title": "Writing Bioinformatics Methods",
    "section": "2 What I look for when reviewing bioinformatics methods",
    "text": "2 What I look for when reviewing bioinformatics methods\nOverall, I’m looking to understand two things:\n\nWhere the data comes from\nHow the data was processed\n\n\n2.1 Where the data comes from\nThe kind of information I need to understand whether the analysis has a sound set of inputs includes:\n\nwhat experimental method(s) generated the data (if any)?\nwhat database were the data obtained from\n\nas databases and their contents can change over time, this might require a version number or date of access\nhow were the data identified in the database? Was this a search result (if so, what search terms were used)? If not a search result, how was the data reduced to the subset you’re working with?\n\nwere the data processed after you obtained it?\n\nthis might include filtering and QC for sequence reads, for example - or excluding sequences above or below a particular length\n\n\n\n\n2.2 How the data was processed\nThere are two overarching components of the research I want to know from your methods section:\n\nHow was each step of analysis or data processing performed?\nHow do the individual analyses flow together to take the data from its initial form to a final output?\n\nA flowchart figure (as in the example linked above) can be a very simple and effective way to deliver the necessary information for part (2). This doesn’t need to have every last bit of detail, but does need to get across to me how the data was taken through each step, in what order, and what general state the data was in between each step.\nEspecially for involved, complex analyses, the information required to satisfy part (2) can be quite bulky. For any given step in the analysis I want to know:\n\nwhat was the input data?\nwhat tool was used (e.g. a software package or a script, with an identifiable name)\nwhat version of the tool was used (e.g. software version number, or link directly to the script on GitHub)\na citation for the software, if it has been published\nthe parameters used for the analysis\n\nThere is quite a bit of flexibility, here. It is certainly possible to detail every piece of information in the Methods section of the thesis (or paper), but it is also permissible to put much of the detail into supplementary information or an appendix, or make it available online, so long as the reader can understand what was done and the information is available to them.\nFor example, if you performed each individual step manually at the command-line, it would be reasonable to report each command-line in the Methods section.\nAlternatively, you might have automated the analysis into a script, or Galaxy workflow, in which case you could make the script/workflow available online, and put the link into the Methods section. This would mean you only need to outline the analysis process (with tool names, versions, citations, and relevant choices), but could leave the detail of the commands to interested readers who followed the link to the script."
  },
  {
    "objectID": "thesis.html",
    "href": "thesis.html",
    "title": "Writing Your Thesis/Dissertation",
    "section": "",
    "text": "Important\n\n\n\nPlease read the BM954 guidelines  and ensure that your thesis meets all the guidelines before you submit it.\n\n\n\nSlides for Dr Feeney’s writing tutorial"
  },
  {
    "objectID": "thesis.html#general-thesis-writing-guidance",
    "href": "thesis.html#general-thesis-writing-guidance",
    "title": "Writing Your Thesis/Dissertation",
    "section": "",
    "text": "Important\n\n\n\nPlease read the BM954 guidelines  and ensure that your thesis meets all the guidelines before you submit it.\n\n\n\nSlides for Dr Feeney’s writing tutorial"
  },
  {
    "objectID": "thesis.html#dr-feeneys-top-tips-for-writing-a-great-thesis-starting-from-day-one",
    "href": "thesis.html#dr-feeneys-top-tips-for-writing-a-great-thesis-starting-from-day-one",
    "title": "Writing Your Thesis/Dissertation",
    "section": "2 Dr Feeney’s Top Tips for Writing a Great Thesis, Starting from Day One",
    "text": "2 Dr Feeney’s Top Tips for Writing a Great Thesis, Starting from Day One\n\nRead broadly & think critically.\n\nYou will often get great ideas from reading papers outside your field, or be able to make connections to other systems/organisms/etc. (Plus, you’ll be able to use it as extra reading in your exams!)\n\nOrganise your references as you go along. Use reference management software\nWrite clearly and concisely\nPay attention to sentence and paragraph structure\nBe specific & say what you mean\nUse figures where appropriate\nProofread (and ask your fellow students to proofread)\nCite appropriate references using a correct style\nPay attention to the instructions and the assessment criteria (available on Myplace)"
  },
  {
    "objectID": "thesis.html#writing-checklist---for-when-you-are-ready-to-sit-down-and-start-writing",
    "href": "thesis.html#writing-checklist---for-when-you-are-ready-to-sit-down-and-start-writing",
    "title": "Writing Your Thesis/Dissertation",
    "section": "3 Writing checklist - for when you are ready to sit down and start writing",
    "text": "3 Writing checklist - for when you are ready to sit down and start writing\n\nIdentify key results (outline/bullet points)\nStart writing by first making your figures (the “backbone” of your story)\nWrite the methods section (make sure you cover every experiment presented in your figures/tables)\nWrite your results section, going through each of your results (figures) in a logical order.\n\n\n\n\n\n\n\nTip\n\n\n\nOrganize your thoughts logically\n\nFor each experiment/result, explain:\n\nyour aim (the reason why you did the experiment)\nthe method (how you did the experiment)\nthe results (what you found)\nthe significance (what the results mean)\n\n\nalways in that order!!\n\n\n\nWrite your discussion (what do your results mean?)\n\n\n\n\n\n\n\nTip\n\n\n\nWriting a Good Discussion Section\n\nCan you create a model figure illustrating your results and placing them in the context of what was previously known?\nMake sure that any information essential for understanding your results (context) was present in the introduction.\nIn your discussion, have you gone back to address all the key points raised in your intro?\nDo not just reiterate/rehash the points raised in your results section.\n\nput your results in a broader context:\n\nwhat is known in the literature?\nhow do your results relate to other systems/types of cells/situations/etc.?\n\n\n\n\n\n\nProofread, edit, and improve your draft based on feedback.\n\n\nask other students in the group to read and advise\n\n\nWrite an abstract and decide on a title"
  },
  {
    "objectID": "thesis.html#three-common-scientific-writing-mistakes-and-how-to-avoid-them",
    "href": "thesis.html#three-common-scientific-writing-mistakes-and-how-to-avoid-them",
    "title": "Writing Your Thesis/Dissertation",
    "section": "4 Three Common Scientific Writing Mistakes and How to Avoid Them",
    "text": "4 Three Common Scientific Writing Mistakes and How to Avoid Them\n\n\n\n\n\n\nNote\n\n\n\nProblem: Lack of attention to sentence structure\nExample: “Some students have really excellent ideas and are putting those ideas in their theses and making sure that they reference other people’s ideas from the literature correctly and using reference management software in appropriate ways and including a list of references at the end of their thesis. So great.”\nSolution: Be ruthless about editing your sentences until each sentence contains just one idea (the example above contained at least 4 separate ideas). It may help to read your writing aloud, as in the above example: take note of where you would naturally pause to take a breath.\nAt one end of the extreme, you have long, convoluted sentences that try to do too much (the first sentence in the example). At the other end, you have another type of grammatical disaster - beware sentence fragments.\n\n\n\n\n\n\n\n\nNote\n\n\n\nProblem: Excessive use of scientific jargon, colloquialisms, and/or acronyms\nExample: “We spun down the cells and washed them with PBS.”\nSolution: “spun down the cells” is something you might say colloquially (and that’s fine), However, in formal scientific language, you would say that the cells were centrifuged. Avoid colloquialisms and make sure you always define abbreviations (like PBS) at the first use.\n\n\n\n\n\n\n\n\nNote\n\n\n\nProblem: Lack of precision and/or attention to detail\nExample: “The genes in E. coli were translated and cheY was well conserved.”\nSolution: Pay careful attention to conventions in your field and precise usage of terms. Ask a friend or colleague to look over your writing and make sure that it conveys your intended meaning.\nHere, gene and species names should be italicized by convention (N.B. cheY refers to the gene, CheY refers to the protein). “Translated” is mis-used (remember that genes are transcribed). Finally, the sentence is, overall, frustratingly vague (which genes? what does “well conserved” mean?).\nA better and more meaningful version: “The genes involved in chemotaxis in E. coli were expressed under these experimental conditions (mid-logarithmic phase in MOPS minimal medium at 37° C). cheY was well-conserved, with homologs found in 99.4% of all analysed E. coli genomes.)"
  },
  {
    "objectID": "thesis.html#links-to-some-helpful-writing-tipsguides",
    "href": "thesis.html#links-to-some-helpful-writing-tipsguides",
    "title": "Writing Your Thesis/Dissertation",
    "section": "5 Links to some helpful writing tips/guides:",
    "text": "5 Links to some helpful writing tips/guides:\n\nUse a style guide, e.g. The Elements of Style - Still one of the best, and shortest, books of advice on writing style - LP\nTen simple rules for scientists: Improving your writing productivity - The “Ten Simple Rules” papers strike again! - LP\nNovelist Cormac McCarthy’s tips on how to write a great science paper - McCarthy is a great novelist, renowned for economical writing. He knnows how to communicate - LP\nTen simple rules for structuring papers - Another in the excellent “Ten Simple Rules” series - LP\nImproving your scientific writing: a short guide - A long and detailed personal opinion by Fred Bushman - LP\nSome tips for scientific writing - Sound general advice on writing for a scientific audience - LP\nTen Simple (Empirical) Rules for Writing Science - The “Ten Simple Rules…” articles keep coming - LP\n“I” versus “the author”: The power of first-person voice when writing about science - Recent musing on the role of first- vs. third- person writing in science - MF"
  }
]